<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tUniform">
	<!-- 장바구니 -->
	<select id="selectAllByBuyer" resultType="tUniformVo">
		SELECT *
		FROM UNIFORM U INNER JOIN UNIFORM_INFO I
		USING(UNI_INFO_NO)
		INNER JOIN PLAYER P
		ON U.PLAYER_NO = P.NO
		WHERE BUYER = #{buyer}
		
		<if test="periodBtn == null">
			AND BUY_DATE IS NULL
		</if>
		<choose>
			<when test="periodBtn == '15d'">
				AND BUY_DATE BETWEEN SYSDATE-15 AND SYSDATE
			</when>
			<when test="periodBtn == '1mon'">
				AND BUY_DATE BETWEEN ADD_MONTHS(SYSDATE, -1) AND SYSDATE
			</when>
			<when test="periodBtn == '2mon'">
				AND BUY_DATE BETWEEN ADD_MONTHS(SYSDATE, -2) AND SYSDATE
			</when>
			<when test="periodBtn == '4mon'">
				AND BUY_DATE BETWEEN ADD_MONTHS(SYSDATE, -4) AND SYSDATE
			</when>
		</choose>
		
		<if test="yearSelect != null and monSelect != null">
			AND TO_CHAR(BUY_DATE, 'YYYY') = #{yearSelect}
			AND TO_CHAR(BUY_DATE, 'MM') = #{monSelect}		
		</if>
	</select>
	
	<!-- 장바구니 구매하기 버튼 눌렀을때 가져오는정보 -->
	<select id="selectInfoByUniformNo" resultType="tUniformVo">
		SELECT *
		FROM UNIFORM U INNER JOIN UNIFORM_INFO I
		USING(UNI_INFO_NO)
		INNER JOIN PLAYER P
		ON U.PLAYER_NO = P.NO
        INNER JOIN (SELECT NAME USERNAME, NICKNAME, POINT, PHONE, ID 
                    FROM ACCOUNT 
                    WHERE ID = #{buyer}) A
        ON A.ID = U.BUYER
		WHERE UNIFORM_NO = #{uniformNo}
		ORDER BY BUY_DATE DESC
	</select>
	
	
	<update id="updateTotalNUniCntByUniformNo">
		UPDATE UNIFORM
		SET UNI_CNT = #{uniCnt},
    		TOTAL = #{total}
		WHERE UNIFORM_NO = #{uniformNo}
	</update>
	
	<update id="updateBuyDateByUniformNo">
		UPDATE UNIFORM
		SET BUY_DATE = SYSDATE,
			STATE = '결제완료'
		WHERE UNIFORM_NO = #{uniformNo}
	</update>
	
	<!-- 유니폼결제시 재고카운트 업데이트 -->
	<!-- 결제완료한 유니폼의 사이즈 현재재고 - 결제한유니폼개수 를 업데이트 -->
	<update id="updateSizeCount"> 
		UPDATE UNIFORM_INFO
		
		<choose>
			<when test="uniSize == 'XL'">
				SET XL_COUNT = (SELECT XL_COUNT - #{uniCnt} 
		 						  FROM UNIFORM_INFO
		 						  WHERE UNI_INFO_NO = #{uniInfoNo})
			</when>
			<when test="uniSize == 'L'">
				SET L_COUNT = (SELECT XL_COUNT - #{uniCnt} 
		 						 FROM UNIFORM_INFO
		  						 WHERE UNI_INFO_NO = #{uniInfoNo})
			</when>
			<when test="uniSize == 'M'">
				SET M_COUNT = (SELECT XL_COUNT - #{uniCnt} 
		   						FROM UNIFORM_INFO
		   						WHERE UNI_INFO_NO = #{uniInfoNo})
			</when>
			<when test="uniSize == 'S'">
				SET S_COUNT = (SELECT XL_COUNT - #{uniCnt} 
		   						FROM UNIFORM_INFO
		   						WHERE UNI_INFO_NO = #{uniInfoNo})
			</when>
		</choose>
		WHERE UNI_INFO_NO = #{uniInfoNo}
		
	</update>
	
	<!-- 장바구니 상품 제거 -->
	<delete id="deleteRowByUniformNo">
		DELETE FROM UNIFORM
		WHERE BUYER = #{buyer}
		AND UNIFORM_NO = #{uniformNo}
	</delete>
</mapper>













